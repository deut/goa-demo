// Code generated by goa v3.20.1, DO NOT EDIT.
//
// hamster client
//
// Command:
// $ goa gen goa-demo/design

package hamster

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "hamster" service client.
type Client struct {
	ListEndpoint   goa.Endpoint
	CreateEndpoint goa.Endpoint
	ShowEndpoint   goa.Endpoint
}

// NewClient initializes a "hamster" service client given the endpoints.
func NewClient(list, create, show goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:   list,
		CreateEndpoint: create,
		ShowEndpoint:   show,
	}
}

// List calls the "list" endpoint of the "hamster" service.
func (c *Client) List(ctx context.Context) (res []*Hamster, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Hamster), nil
}

// Create calls the "create" endpoint of the "hamster" service.
func (c *Client) Create(ctx context.Context, p *HamsterPayload) (res *Hamster, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Hamster), nil
}

// Show calls the "show" endpoint of the "hamster" service.
// Show may return the following errors:
//   - "not_found" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *Hamster, err error) {
	var ires any
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Hamster), nil
}
